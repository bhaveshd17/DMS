# Generated by Django 3.2.5 on 2021-07-11 05:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminDma',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('department', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_name', models.CharField(max_length=40)),
                ('location', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=150)),
                ('start_date', models.DateField()),
                ('apply_by', models.DateField(null=True)),
                ('sal', models.FloatField(validators=[django.core.validators.MaxValueValidator(99)])),
                ('skills', models.TextField(max_length=500)),
                ('domain', models.CharField(max_length=100)),
                ('about_comp', models.TextField(max_length=500)),
                ('about_work', models.TextField(max_length=500)),
                ('cgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('live_kt', models.CharField(choices=[('0', '0'), ('1', '1'), ('5', '5'), ('3', '3'), ('4', '4'), ('6', '6'), ('7', 'Greater than 6'), ('2', '2')], max_length=15, null=True)),
                ('drop', models.CharField(choices=[('1', '1'), ('0', '0'), ('3', 'Greater than 2'), ('2', '2')], max_length=15, null=True)),
                ('who_can_apply', models.TextField(max_length=500)),
                ('perks', models.TextField(max_length=500)),
                ('additional', models.TextField(max_length=500)),
                ('status', models.CharField(default=0, max_length=10, null=True)),
                ('work_from_home', models.BooleanField(default=False)),
                ('adm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.admindma')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('roll_no', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=10, null=True)),
                ('skills', models.TextField(max_length=500)),
                ('age', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(99)])),
                ('gender', models.CharField(choices=[('2', 'Other'), ('1', 'Female'), ('0', 'Male')], max_length=15, null=True)),
                ('branch', models.CharField(choices=[('0', 'CMPN'), ('4', 'BIOM'), ('2', 'EXTC'), ('1', 'INFT'), ('3', 'ETRX')], max_length=12, null=True)),
                ('div', models.CharField(choices=[('0', 'A'), ('1', 'B'), ('2', 'C')], max_length=12, null=True)),
                ('corresponding_address', models.TextField(max_length=500, null=True)),
                ('permanent_address', models.TextField(max_length=500, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('gmail', models.EmailField(max_length=254, null=True)),
                ('residence_phone', models.CharField(max_length=10, null=True)),
                ('pan_card_no', models.CharField(max_length=20, null=True)),
                ('aadhar_no', models.CharField(max_length=20, null=True)),
                ('passport_no', models.CharField(max_length=20, null=True)),
                ('year_of_graduation', models.CharField(max_length=4, null=True)),
                ('disability', models.BooleanField(null=True)),
                ('type_of_disability', models.CharField(max_length=100, null=True)),
                ('father_name', models.CharField(max_length=50, null=True)),
                ('mother_name', models.CharField(max_length=50, null=True)),
                ('father_occupation', models.CharField(max_length=50, null=True)),
                ('mother_occupation', models.CharField(max_length=50, null=True)),
                ('co_curriculum_activities', models.CharField(max_length=100, null=True)),
                ('extra_curriculum_activities', models.CharField(max_length=100, null=True)),
                ('hobbies', models.CharField(max_length=150, null=True)),
                ('profile_photo', models.ImageField(null=True, upload_to='profile/')),
                ('resume', models.FileField(null=True, upload_to='')),
                ('facebook', models.URLField(null=True)),
                ('linkdin', models.URLField(null=True)),
                ('github', models.URLField(null=True)),
                ('other', models.CharField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_email_verified', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('te_sem5_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('te_sem6_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('te_cgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('live_kt', models.CharField(max_length=15, null=True)),
                ('drop', models.CharField(choices=[('0', '0'), ('1', '1'), ('4', '4'), ('5', '5'), ('2', '2'), ('3', '3')], max_length=15, null=True)),
                ('dead_kt', models.CharField(max_length=15, null=True)),
                ('roll_no_3', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='SE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('se_sem3_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('se_sem4_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('se_cgpa', models.FloatField()),
                ('roll_no_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Mock_test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, null=True)),
                ('date', models.DateField()),
                ('from_time', models.TimeField()),
                ('to_time', models.TimeField()),
                ('details', models.TextField(max_length=500)),
                ('link', models.CharField(default='https', max_length=50)),
                ('adm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.admindma')),
            ],
        ),
        migrations.CreateModel(
            name='Job_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('job_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.job')),
                ('roll_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Intership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_name', models.CharField(max_length=40)),
                ('link', models.CharField(max_length=150)),
                ('start_date', models.DateField()),
                ('apply_by', models.DateField()),
                ('sal', models.IntegerField()),
                ('skills', models.TextField(max_length=500)),
                ('duration', models.CharField(max_length=20)),
                ('domain', models.CharField(max_length=100)),
                ('about_comp', models.TextField(max_length=500)),
                ('about_work', models.TextField(max_length=500)),
                ('who_can_apply', models.TextField(max_length=500)),
                ('perks', models.TextField(max_length=500)),
                ('additional', models.TextField(max_length=500)),
                ('work_from_home', models.BooleanField(default=False)),
                ('adm_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.admindma')),
            ],
        ),
        migrations.CreateModel(
            name='Int_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=10)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('int_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.intership')),
                ('roll_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='FE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fe_sem1_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('fe_sem2_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('fe_cgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('roll_no_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Certificates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=500)),
                ('domain', models.CharField(max_length=500)),
                ('file', models.FileField(upload_to='documents/%Y-%m-%d')),
                ('certificate_issued_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='BE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('be_sem7_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('be_sem8_sgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('be_cgpa', models.FloatField(validators=[django.core.validators.MaxValueValidator(10)])),
                ('kt_BE', models.CharField(choices=[('0', '0'), ('1', '1'), ('5', '5'), ('3', '3'), ('4', '4'), ('6', '6'), ('7', 'Greater than 6'), ('2', '2')], max_length=15, null=True)),
                ('drop_BE', models.CharField(choices=[('1', '1'), ('0', '0'), ('3', 'Greater than 2'), ('2', '2')], max_length=15, null=True)),
                ('roll_no_4', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Add_exp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comp_name', models.CharField(max_length=50)),
                ('role', models.CharField(max_length=50)),
                ('duration', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('rollNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
        migrations.CreateModel(
            name='Add_edu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clg_name', models.CharField(max_length=50)),
                ('degree', models.CharField(choices=[('12', '12th'), ('10', '10th'), ('diploma', 'Diploma')], max_length=50, null=True)),
                ('board', models.CharField(max_length=50)),
                ('percentage', models.FloatField()),
                ('start_year', models.DateField()),
                ('end_year', models.DateField()),
                ('marks', models.IntegerField(validators=[django.core.validators.MaxValueValidator(999)])),
                ('gap', models.CharField(choices=[('0', '0'), ('1', '1'), ('4', '4'), ('5', '5'), ('2', '2'), ('3', '3')], max_length=15, null=True)),
                ('diploma_pattern', models.CharField(choices=[('NA', 'NA'), ('yearly pattern', 'yearly pattern'), ('semester pattern', 'semester pattern')], default='NA', max_length=20)),
                ('diploma_aggregate_mw', models.CharField(default='NA', max_length=100)),
                ('diploma_aggregate_pw', models.CharField(default='NA', max_length=100)),
                ('no_of_dead_kt', models.CharField(default='NA', max_length=10)),
                ('roll_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='DMS_Student.student')),
            ],
        ),
    ]
